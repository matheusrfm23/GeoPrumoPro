{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\GeoPrumoPro\\\\frontend\\\\src\\\\components\\\\MapView\\\\MapView.jsx\",\n  _s = $RefreshSig$();\n// geoprumo/frontend/src/components/MapView/MapView.jsx\n\nimport React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// --- Correção para o ícone padrão do marcador ---\n// O react-leaflet tem um bug conhecido onde os ícones dos marcadores não aparecem.\n// Este código corrige isso importando os ícones diretamente.\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n// --- Fim da correção ---\n\n// Componente auxiliar para ajustar o mapa à rota\nconst FitBounds = ({\n  route\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (route && route.length > 0) {\n      const bounds = L.latLngBounds(route.map(p => [p.latitude, p.longitude]));\n      map.fitBounds(bounds, {\n        padding: [50, 50]\n      });\n    }\n  }, [route, map]);\n  return null;\n};\n_s(FitBounds, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = FitBounds;\nfunction MapView({\n  data\n}) {\n  // Define uma posição central padrão (Belo Horizonte, MG)\n  const defaultPosition = [-19.9167, -43.9333];\n  const routePoints = data === null || data === void 0 ? void 0 : data.optimized_route;\n  const routeGeoJson = data === null || data === void 0 ? void 0 : data.map_geojson;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultPosition,\n    zoom: 13,\n    style: {\n      height: '100%',\n      width: '100%',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), routePoints && routePoints.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [point.latitude, point.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [point.order, \": \", point.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 47\n        }, this), \"Lat: \", point.latitude.toFixed(5), \", Lon: \", point.longitude.toFixed(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, point.order, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), routeGeoJson && /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: routeGeoJson,\n      style: {\n        color: '#007BFF',\n        weight: 5,\n        opacity: 0.8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FitBounds, {\n      route: routePoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MapView;\nexport default MapView;\nvar _c, _c2;\n$RefreshReg$(_c, \"FitBounds\");\n$RefreshReg$(_c2, \"MapView\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","useMap","L","icon","iconShadow","jsxDEV","_jsxDEV","DefaultIcon","iconUrl","shadowUrl","iconAnchor","prototype","options","FitBounds","route","_s","map","length","bounds","latLngBounds","p","latitude","longitude","fitBounds","padding","_c","MapView","data","defaultPosition","routePoints","optimized_route","routeGeoJson","map_geojson","center","zoom","style","height","width","borderRadius","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","point","position","order","name","toFixed","color","weight","opacity","_c2","$RefreshReg$"],"sources":["C:/Users/mathe/Desktop/GeoPrumoPro/frontend/src/components/MapView/MapView.jsx"],"sourcesContent":["// geoprumo/frontend/src/components/MapView/MapView.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// --- Correção para o ícone padrão do marcador ---\r\n// O react-leaflet tem um bug conhecido onde os ícones dos marcadores não aparecem.\r\n// Este código corrige isso importando os ícones diretamente.\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n    iconAnchor: [12, 41] \r\n});\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n// --- Fim da correção ---\r\n\r\n\r\n// Componente auxiliar para ajustar o mapa à rota\r\nconst FitBounds = ({ route }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    if (route && route.length > 0) {\r\n      const bounds = L.latLngBounds(route.map(p => [p.latitude, p.longitude]));\r\n      map.fitBounds(bounds, { padding: [50, 50] });\r\n    }\r\n  }, [route, map]);\r\n  return null;\r\n};\r\n\r\n\r\nfunction MapView({ data }) {\r\n  // Define uma posição central padrão (Belo Horizonte, MG)\r\n  const defaultPosition = [-19.9167, -43.9333];\r\n\r\n  const routePoints = data?.optimized_route;\r\n  const routeGeoJson = data?.map_geojson;\r\n\r\n  return (\r\n    <MapContainer center={defaultPosition} zoom={13} style={{ height: '100%', width: '100%', borderRadius: '8px' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n\r\n      {/* Renderiza os marcadores dos pontos */}\r\n      {routePoints && routePoints.map(point => (\r\n        <Marker key={point.order} position={[point.latitude, point.longitude]}>\r\n          <Popup>\r\n            <b>{point.order}: {point.name}</b><br />\r\n            Lat: {point.latitude.toFixed(5)}, Lon: {point.longitude.toFixed(5)}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n\r\n      {/* Renderiza o traçado da rota (se existir) */}\r\n      {routeGeoJson && (\r\n        <GeoJSON data={routeGeoJson} style={{ color: '#007BFF', weight: 5, opacity: 0.8 }} />\r\n      )}\r\n      \r\n      {/* Componente para ajustar o zoom */}\r\n      <FitBounds route={routePoints} />\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default MapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}