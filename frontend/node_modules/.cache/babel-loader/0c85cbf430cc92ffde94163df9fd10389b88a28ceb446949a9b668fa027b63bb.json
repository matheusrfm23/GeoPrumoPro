{"ast":null,"code":"import _objectSpread from\"C:/Users/mathe/Desktop/GeoPrumoPro/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// geoprumo/frontend/src/App.jsx\nimport React,{useState}from'react';import Uploader from'./components/Upload/Uploader';import PointsList from'./components/Points/PointsList';import MapView from'./components/MapView/MapView';import ActionPanel from'./components/ActionPanel/ActionPanel';import ManualAdd from'./components/ManualAdd/ManualAdd';import useSessionStorage from'./hooks/useSessionStorage';import{optimizeRouteData,enrichRouteWithAI,exportRouteFile,geocodeSearch}from'./services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoading,setIsLoading]=useState(false);const[isEnriching,setIsEnriching]=useState(false);const[optimizedData,setOptimizedData]=useSessionStorage('geoPrumoSession',null);const[error,setError]=useState(null);const[pendingData,setPendingData]=useState({files:[],links:[],texts:[]});const[needsReoptimization,setNeedsReoptimization]=useState(false);const handleAddData=payload=>{setPendingData(prevData=>({files:[...prevData.files,...payload.files],links:[...prevData.links,...payload.links],texts:[...prevData.texts,...payload.texts]}));setNeedsReoptimization(true);};const handleOptimize=async()=>{const activePoints=optimizedData?optimizedData.optimized_route.filter(p=>p.active!==false):[];const payloadWithExistingPoints=_objectSpread(_objectSpread({},pendingData),{},{existing_points:activePoints});if(payloadWithExistingPoints.files.length===0&&payloadWithExistingPoints.links.length===0&&payloadWithExistingPoints.texts.length===0&&payloadWithExistingPoints.existing_points.length===0){setError(\"Nenhum ponto para otimizar.\");return;}setIsLoading(true);setError(null);try{const result=await optimizeRouteData(payloadWithExistingPoints);const routeWithActiveState=result.optimized_route.map(p=>_objectSpread(_objectSpread({},p),{},{active:true}));setOptimizedData(_objectSpread(_objectSpread({},result),{},{optimized_route:routeWithActiveState}));setPendingData({files:[],links:[],texts:[]});setNeedsReoptimization(false);}catch(err){setError(err.message);}finally{setIsLoading(false);}};const handleDeletePoint=originalIndexToDelete=>{setOptimizedData(prevData=>_objectSpread(_objectSpread({},prevData),{},{optimized_route:prevData.optimized_route.filter(p=>p.original_index!==originalIndexToDelete)}));setNeedsReoptimization(true);};const handleTogglePointActive=originalIndexToToggle=>{setOptimizedData(prevData=>_objectSpread(_objectSpread({},prevData),{},{optimized_route:prevData.optimized_route.map(p=>p.original_index===originalIndexToToggle?_objectSpread(_objectSpread({},p),{},{active:p.active===false?true:false}):p)}));setNeedsReoptimization(true);};const handleManualAddPoint=async query=>{setIsLoading(true);setError(null);try{const newPointData=await geocodeSearch(query);const newPoint=_objectSpread(_objectSpread({},newPointData),{},{order:((optimizedData===null||optimizedData===void 0?void 0:optimizedData.optimized_route.length)||0)+1,original_index:\"manual-\".concat(Date.now()),active:true});setOptimizedData(prevData=>_objectSpread(_objectSpread({},prevData),{},{optimized_route:[...((prevData===null||prevData===void 0?void 0:prevData.optimized_route)||[]),newPoint]}));setNeedsReoptimization(true);}catch(err){setError(err.message);}finally{setIsLoading(false);}};const handleEnrich=async()=>{if(!optimizedData||!optimizedData.optimized_route)return;setIsEnriching(true);setError(null);try{const enrichedPoints=await enrichRouteWithAI(optimizedData.optimized_route);setOptimizedData(prevData=>_objectSpread(_objectSpread({},prevData),{},{optimized_route:enrichedPoints}));}catch(err){setError(err.message);}finally{setIsEnriching(false);}};const handleExport=async format=>{if(!optimizedData||!optimizedData.optimized_route)return;setError(null);try{await exportRouteFile(format,optimizedData.optimized_route.filter(p=>p.active!==false));}catch(err){setError(err.message);}};const handleReset=()=>{setOptimizedData(null);setPendingData({files:[],links:[],texts:[]});setError(null);setNeedsReoptimization(false);};const hasPendingData=pendingData.files.length>0||pendingData.links.length>0||pendingData.texts.length>0;const hasOptimizedData=optimizedData&&optimizedData.optimized_route&&optimizedData.optimized_route.length>0;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 min-h-screen flex flex-col font-sans\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"bg-white shadow-md p-4 flex items-center justify-between flex-shrink-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/GeoPrumo pin.png\",alt:\"Logo GeoPrumo\",className:\"h-10 w-10 mr-4\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/GeoPrumo completa.jpg\",alt:\"Logotipo Completo GeoPrumo\",className:\"h-10 hidden sm:block\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,className:\"bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg hover:bg-gray-300 text-sm\",children:\"Reiniciar Rota\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex-grow container mx-auto p-2 sm:p-4 grid grid-cols-1 lg:grid-cols-2 gap-4\",style:{height:'calc(100vh - 80px)'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-shrink-0 bg-white p-4 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-700 mb-2\",children:hasOptimizedData?'Gerenciar Rota':'1. Adicionar Pontos'}),/*#__PURE__*/_jsx(Uploader,{onProcess:handleAddData,isLoading:isLoading}),/*#__PURE__*/_jsx(ManualAdd,{onAddPoint:handleManualAddPoint,isLoading:isLoading}),hasPendingData&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-2 bg-yellow-50 border border-yellow-200 rounded\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-semibold text-yellow-800\",children:\"Novos dados adicionados. Otimize para atualizar a rota.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 grid grid-cols-1 gap-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleOptimize,disabled:!hasPendingData&&!needsReoptimization||isLoading,className:\"w-full bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\",children:isLoading?'Otimizando...':'Analisar e Otimizar Rota'})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-red-600 font-bold\",children:error})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow bg-white p-4 rounded-lg shadow-md overflow-y-auto min-h-0\",children:/*#__PURE__*/_jsx(PointsList,{route:optimizedData===null||optimizedData===void 0?void 0:optimizedData.optimized_route,onEnrich:handleEnrich,isEnriching:isEnriching,onDelete:handleDeletePoint,onToggleActive:handleTogglePointActive})}),hasOptimizedData&&/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(ActionPanel,{summary:optimizedData.summary,onExport:handleExport})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-2 sm:p-4 rounded-lg shadow-md\",children:/*#__PURE__*/_jsx(MapView,{data:optimizedData})})]})]});}export default App;","map":{"version":3,"names":["React","useState","Uploader","PointsList","MapView","ActionPanel","ManualAdd","useSessionStorage","optimizeRouteData","enrichRouteWithAI","exportRouteFile","geocodeSearch","jsx","_jsx","jsxs","_jsxs","App","isLoading","setIsLoading","isEnriching","setIsEnriching","optimizedData","setOptimizedData","error","setError","pendingData","setPendingData","files","links","texts","needsReoptimization","setNeedsReoptimization","handleAddData","payload","prevData","handleOptimize","activePoints","optimized_route","filter","p","active","payloadWithExistingPoints","_objectSpread","existing_points","length","result","routeWithActiveState","map","err","message","handleDeletePoint","originalIndexToDelete","original_index","handleTogglePointActive","originalIndexToToggle","handleManualAddPoint","query","newPointData","newPoint","order","concat","Date","now","handleEnrich","enrichedPoints","handleExport","format","handleReset","hasPendingData","hasOptimizedData","className","children","src","alt","onClick","style","height","onProcess","onAddPoint","disabled","route","onEnrich","onDelete","onToggleActive","summary","onExport","data"],"sources":["C:/Users/mathe/Desktop/GeoPrumoPro/frontend/src/App.jsx"],"sourcesContent":["// geoprumo/frontend/src/App.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport Uploader from './components/Upload/Uploader';\r\nimport PointsList from './components/Points/PointsList';\r\nimport MapView from './components/MapView/MapView'; \r\nimport ActionPanel from './components/ActionPanel/ActionPanel'; \r\nimport ManualAdd from './components/ManualAdd/ManualAdd'; \r\nimport useSessionStorage from './hooks/useSessionStorage';\r\nimport { optimizeRouteData, enrichRouteWithAI, exportRouteFile, geocodeSearch } from './services/api';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEnriching, setIsEnriching] = useState(false);\r\n  const [optimizedData, setOptimizedData] = useSessionStorage('geoPrumoSession', null);\r\n  const [error, setError] = useState(null);\r\n  const [pendingData, setPendingData] = useState({ files: [], links: [], texts: [] });\r\n  const [needsReoptimization, setNeedsReoptimization] = useState(false);\r\n\r\n  const handleAddData = (payload) => {\r\n    setPendingData(prevData => ({\r\n      files: [...prevData.files, ...payload.files],\r\n      links: [...prevData.links, ...payload.links],\r\n      texts: [...prevData.texts, ...payload.texts],\r\n    }));\r\n    setNeedsReoptimization(true);\r\n  };\r\n  \r\n  const handleOptimize = async () => {\r\n    const activePoints = optimizedData ? optimizedData.optimized_route.filter(p => p.active !== false) : [];\r\n    const payloadWithExistingPoints = { ...pendingData, existing_points: activePoints };\r\n    if (payloadWithExistingPoints.files.length === 0 && payloadWithExistingPoints.links.length === 0 && payloadWithExistingPoints.texts.length === 0 && payloadWithExistingPoints.existing_points.length === 0) {\r\n      setError(\"Nenhum ponto para otimizar.\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const result = await optimizeRouteData(payloadWithExistingPoints);\r\n      const routeWithActiveState = result.optimized_route.map(p => ({ ...p, active: true }));\r\n      setOptimizedData({ ...result, optimized_route: routeWithActiveState });\r\n      setPendingData({ files: [], links: [], texts: [] });\r\n      setNeedsReoptimization(false);\r\n    } catch (err) { setError(err.message); } finally { setIsLoading(false); }\r\n  };\r\n\r\n  const handleDeletePoint = (originalIndexToDelete) => {\r\n    setOptimizedData(prevData => ({ ...prevData, optimized_route: prevData.optimized_route.filter(p => p.original_index !== originalIndexToDelete) }));\r\n    setNeedsReoptimization(true);\r\n  };\r\n\r\n  const handleTogglePointActive = (originalIndexToToggle) => {\r\n    setOptimizedData(prevData => ({\r\n      ...prevData,\r\n      optimized_route: prevData.optimized_route.map(p => p.original_index === originalIndexToToggle ? { ...p, active: p.active === false ? true : false } : p)\r\n    }));\r\n    setNeedsReoptimization(true);\r\n  };\r\n\r\n  const handleManualAddPoint = async (query) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const newPointData = await geocodeSearch(query);\r\n      const newPoint = {\r\n        ...newPointData,\r\n        order: (optimizedData?.optimized_route.length || 0) + 1,\r\n        original_index: `manual-${Date.now()}`,\r\n        active: true,\r\n      };\r\n      setOptimizedData(prevData => ({\r\n        ...prevData,\r\n        optimized_route: [...(prevData?.optimized_route || []), newPoint]\r\n      }));\r\n      setNeedsReoptimization(true);\r\n    } catch (err) { setError(err.message); } finally { setIsLoading(false); }\r\n  };\r\n\r\n  const handleEnrich = async () => {\r\n    if (!optimizedData || !optimizedData.optimized_route) return;\r\n    setIsEnriching(true);\r\n    setError(null);\r\n    try {\r\n      const enrichedPoints = await enrichRouteWithAI(optimizedData.optimized_route);\r\n      setOptimizedData(prevData => ({ ...prevData, optimized_route: enrichedPoints }));\r\n    } catch (err) { setError(err.message); } finally { setIsEnriching(false); }\r\n  };\r\n  \r\n  const handleExport = async (format) => {\r\n    if (!optimizedData || !optimizedData.optimized_route) return;\r\n    setError(null);\r\n    try {\r\n      await exportRouteFile(format, optimizedData.optimized_route.filter(p => p.active !== false));\r\n    } catch (err) { setError(err.message); }\r\n  };\r\n  \r\n  const handleReset = () => {\r\n    setOptimizedData(null);\r\n    setPendingData({ files: [], links: [], texts: [] });\r\n    setError(null);\r\n    setNeedsReoptimization(false);\r\n  };\r\n  \r\n  const hasPendingData = pendingData.files.length > 0 || pendingData.links.length > 0 || pendingData.texts.length > 0;\r\n  const hasOptimizedData = optimizedData && optimizedData.optimized_route && optimizedData.optimized_route.length > 0;\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen flex flex-col font-sans\">\r\n      <header className=\"bg-white shadow-md p-4 flex items-center justify-between flex-shrink-0\">\r\n        <div className=\"flex items-center\">\r\n            <img src=\"/GeoPrumo pin.png\" alt=\"Logo GeoPrumo\" className=\"h-10 w-10 mr-4\"/>\r\n            <img src=\"/GeoPrumo completa.jpg\" alt=\"Logotipo Completo GeoPrumo\" className=\"h-10 hidden sm:block\"/>\r\n        </div>\r\n        <button onClick={handleReset} className=\"bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg hover:bg-gray-300 text-sm\">\r\n            Reiniciar Rota\r\n        </button>\r\n      </header>\r\n\r\n      <main className=\"flex-grow container mx-auto p-2 sm:p-4 grid grid-cols-1 lg:grid-cols-2 gap-4\" style={{ height: 'calc(100vh - 80px)' }}>\r\n        <div className=\"flex flex-col space-y-4\">\r\n          <div className=\"flex-shrink-0 bg-white p-4 rounded-lg shadow-md\">\r\n            <h2 className=\"text-xl font-bold text-gray-700 mb-2\">\r\n              {hasOptimizedData ? 'Gerenciar Rota' : '1. Adicionar Pontos'}\r\n            </h2>\r\n            <Uploader onProcess={handleAddData} isLoading={isLoading} />\r\n            <ManualAdd onAddPoint={handleManualAddPoint} isLoading={isLoading} />\r\n            {hasPendingData && (\r\n              <div className=\"mt-4 p-2 bg-yellow-50 border border-yellow-200 rounded\">\r\n                <p className=\"text-sm font-semibold text-yellow-800\">Novos dados adicionados. Otimize para atualizar a rota.</p>\r\n              </div>\r\n            )}\r\n            <div className=\"mt-4 grid grid-cols-1 gap-2\">\r\n               <button \r\n                  onClick={handleOptimize} \r\n                  disabled={(!hasPendingData && !needsReoptimization) || isLoading} \r\n                  className=\"w-full bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                >\r\n                  {isLoading ? 'Otimizando...' : 'Analisar e Otimizar Rota'}\r\n                </button>\r\n            </div>\r\n            {error && <div className=\"mt-2 text-red-600 font-bold\">{error}</div>}\r\n          </div>\r\n          \r\n          <div className=\"flex-grow bg-white p-4 rounded-lg shadow-md overflow-y-auto min-h-0\">\r\n            <PointsList \r\n              route={optimizedData?.optimized_route} \r\n              onEnrich={handleEnrich}\r\n              isEnriching={isEnriching}\r\n              onDelete={handleDeletePoint}\r\n              onToggleActive={handleTogglePointActive}\r\n            />\r\n          </div>\r\n          \r\n          {hasOptimizedData && <div className=\"flex-shrink-0\"><ActionPanel summary={optimizedData.summary} onExport={handleExport} /></div>}\r\n        </div>\r\n\r\n        <div className=\"bg-white p-2 sm:p-4 rounded-lg shadow-md\">\r\n          <MapView data={optimizedData} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}